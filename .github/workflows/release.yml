name: deepray-release

on:
  release:
    types: [published]
    tags:
      - v*
  push:
    branches:
      - main
      - master
      - r*
      - hotfix
  pull_request:
    branches:
      - main
      - master
      - r*
      - hotfix

permissions:
  contents: read

env:
  MIN_PY_VERSION: '3.9'
  MAX_PY_VERSION: '3.11'

jobs:
  release-wheel:
    name: Test and build release wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-22.04']
        py-version: ['3.10']
        tf-version: ['2.15.0']
        cpu: ['x86']
      fail-fast: false
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false

          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          docker-images: false
          swap-storage: false

      - uses: actions/github-script@0.3.0
        id: author-date
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const commit_details = await github.git.getCommit({owner: context.repo.owner, repo: context.repo.repo, commit_sha: context.sha});
            return commit_details.data.author.date
      - if: matrix.tf-version != '2.15.0'
        shell: bash
        run: echo "SKIP_CUSTOM_OP_TESTS=--skip-custom-ops" >> $GITHUB_ENV
      - if: github.event_name == 'push'
        shell: bash
        run: echo "NIGHTLY_FLAG=--nightly" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - name: Build wheels
        env:
          OS: ${{ runner.os }}
          PY_VERSION: ${{ matrix.py-version }}
          TF_VERSION: ${{ matrix.tf-version }}
          NIGHTLY_TIME: ${{ steps.author-date.outputs.result }}
          CPU: ${{ matrix.cpu }}
        shell: bash
        run: bash .github/workflows/make_wheel_${OS}_${CPU}.sh
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-${{ matrix.py-version }}-tf${{ matrix.tf-version }}-${{ matrix.cpu }}-wheel
          path: artifacts

  upload-wheels:
    name: Publish wheels to PyPi
    needs: [release-wheel]
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        os: ['Linux']
        py-version: ['3.10']
        tf-version: ['2.15.0']
        cpu: ['x86']
      fail-fast: false
    if: (github.event_name == 'push' && github.ref == 'refs/heads/hotfix') || github.event_name == 'release'
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: ${{ matrix.os }}-${{ matrix.py-version }}-tf${{ matrix.tf-version }}-${{ matrix.cpu }}-wheel
          path: ./dist
      - run: |
          set -e -x
          ls -la dist/
          sha256sum dist/*.whl
      - uses: pypa/gh-action-pypi-publish@v1.1.0
        with:
          user: __token__
          password: ${{ secrets.pypi_token }}

  upload-dev-container:
    name: Upload dev container to DockerHub
    needs: [release-wheel]
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        py-version: [
            #  "3.9",
            "3.10",
            # "3.11"
          ]
        tf-version: ["2.15.0"]
      fail-fast: false
    if: (github.event_name == 'push' && github.ref == 'refs/heads/hotfix')
    env:
      PY_VERSION: ${{ matrix.py-version }}
      TF_VERSION: ${{ matrix.tf-version }}

    steps:
      - uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - run: |
          set -e -x
          bash tools/build_dev_container.sh ${PY_VERSION} ${TF_VERSION}
          docker push hailinfufu/deepray-dev:latest-gpu-py${PY_VERSION}-tf${TF_VERSION}-cu12.2.2-ubuntu22.04
